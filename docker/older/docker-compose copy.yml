version: '2'
services:
  mqtt:
    image: hivemq/hivemq-ce
    container_name: mqtt
    ports:
      - 1884:1883
      #- 9090:9090
      - 9399:9399
      - 9010:9010
    environment:
      # Logging settings
      - HIVEMQ_LOG_LEVEL=DEBUG
      # Other settings
    #volumes:
    #  #- ./hivemq-vodafone-metric-extension/hivemq-vodafone-metric-extension/:/opt/hivemq/extensions/hivemq-vodafone-metric-extension/
    #  - ./hivemq-extension-poc-1.0.3-distribution/hivemq-extension-poc/:/opt/hivemq/extensions/hivemq-extension-poc/
    #  - ./hivemq-prometheus-extension-4.0.9/hivemq-prometheus-extension/:/opt/hivemq/extensions/hivemq-prometheus-extension/
    #  #- ./hivemq-heartbeat-extension-1.0.4/hivemq-heartbeat-extension/:/opt/hivemq/extensions/hivemq-heartbeat-extension/
    ##  - ./local/file.json:/remote/file.json
    ##depends_on:
    ##  - othercontainername
    restart: always

  zookeeper:
    container_name: 'Zookeeper'
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: 'kafka'
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "19092:19092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:19092
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:19092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

  kafka-connect:
    image: confluentinc/cp-kafka-connect:3.3.0
    hostname: kafka-connect
    #build: 
    #    context: .
    #    dockerfile: Dockerfile
    container_name: kafka-connect
    depends_on:
      - zookeeper
      - kafka
      #- schema_registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: localhost:19092
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      #CONNECT_BOOTSTRAP_SERVERS: host.docker.internal:19092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: kc_connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: kc_connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kc_connect-status
      # CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      #CONNECT_KEY_CONVERTER: org.apache.kafka.connect.converters.LongConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      #CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      #CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      #CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
    #  ---------------
      CONNECT_PLUGON_PATH: /etc/kafka-connect/jars
    #  CONNECT_PLUGIN_PATH: /usr/share/java/
    command:
      - bash
      - -c
      - |
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
    volumes:
      - ./kafka-connect:/etc/kafka-connect/jars

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:latest
    container_name: kafka-connect-ui
    ports:
      - 8000:8000
    depends_on:
      - kafka-connect
    environment:
      CONNECT_URL: http://kafka-connect:8083

  #schema-registry:
  #  image: confluentinc/cp-schema-registry:5.4.0
  #  container_name: schema-registry
  #  ports:
  #    - 8081:8081
  #  environment:
  #    SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #    SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: host.docker.internal:29092
  #
  #schema-registry-ui:
  #  image: landoop/schema-registry-ui:latest
  #  container_name: schema-registry-ui
  #  depends_on:
  #    - schema-registry
  #  ports:
  #    - 8001:8000
  #  environment:
  #    SCHEMAREGISTRY_URL: http://schema-registry:8081
  #    PROXY: true
